#PBL 3
import pickle
import os

def carregar_dados(arquivo_nome, default):
    if os.path.exists(arquivo_nome):
        with open(arquivo_nome, "rb") as arquivo:
            return pickle.load(arquivo)
    else:
        return default

def salvar_dados(arquivo_nome, dados):
    with open(arquivo_nome, "wb") as arquivo:
        pickle.dump(dados, arquivo)

# Carregar dados
lista_de_produtos = carregar_dados("lista_de_produtos.pkl", [])
grupo = carregar_dados("grupo.pkl", {})
produto = carregar_dados("produto.pkl", {})

somatorio = sum(produto['quantidade'] for produto in lista_de_produtos)

quantidade = menu = contador = 0

MINIMO = 500


#Formatadores de texto
yellow = '\033[93m'
amarelo = '\033[0m'
red = '\033[31m'
vermelho = '\033[0m'
separador = '=' * 50

print(separador)
print(f"{yellow}PROGRAMA INICIADO{amarelo}".center(50))
print(separador)

while True:
    print("Digite o login e depois a senha")
    tentativa_login = input("Login: ")
    tentativa_senha = input("Senha: ")
    contador += 1
    if tentativa_login == 'admin' and tentativa_senha == '@dmiN':
        print(separador)
        print(f"{yellow}Acesso permitido.{amarelo}".center(50))
        print(separador)
        while True:
            
            print(f'{yellow}MENU PRINCIPAL{amarelo}'.center(50))
            menu = input('''1. Registrar compra de produtos.
2. Registrar venda no estoque.
3. Visualização dos produtos.
4. Edição de produtos.
Digite a opção (ou 'sair' para encerrar o programa): ''')
                        
            if menu == '1':         
                while True:      
                    print(separador)
                    print(f"{yellow}Inscrição de produto{amarelo}".center(50))
                                    
                    nome = input("Digite o nome do produto (ou 'sair'para encerrar): ")
                    if nome.lower() == 'sair':
                        break

                    categoria = input("Digite a categoria do produto (ou 'sair' para encerrar): ")
                    if categoria.lower() == 'sair':
                        break

                    quantidade = int(input("Digite a quantidade do produto (ou 0 para encerrar):"))
                    if quantidade == 0:
                        break
                    while quantidade < MINIMO:
                        print(f"Quantidade inválida! Mínimo de {MINIMO}")
                        quantidade = int(input("Digite a quantidade do produto (ou 0 para encerrar):"))
                        if quantidade == 0:
                            break

                    # Atualiza o laço
                    contador += 1

                    # Verifica se no dicionário grupo existe a categoria, se sim, adiciona a quantidade, se não, cria uma nova
                    if categoria in grupo:
                        grupo[categoria] += quantidade
                    else:
                        grupo[categoria] = quantidade

                    # Adiciona a categoria e quantidade ao dicionário do produto e adiciona o produto à lista
                    produto = {'nome': nome, 'categoria': categoria, 'quantidade': quantidade}
                    lista_de_produtos.append(produto)
                    if quantidade == 0:
                        lista_de_produtos.pop(-1)

            elif menu == '2':
                print("Selecione o produto que foi vendido: ")
                for i, produto in enumerate(lista_de_produtos, start=1):
                    print(f"{i}. Nome: {produto['nome']}, Categoria: {produto['categoria']}, Quantidade: {produto['quantidade']}")

                escolha = int(input("Digite o número do produto (ou 0 para sair): "))
                if 1 <= escolha <= len(lista_de_produtos):
                    produto_selecionado = lista_de_produtos[escolha - 1]
                    quantidade_saida = int(input(f"Digite a quantidade a ser retirada do produto '{produto_selecionado['nome']}': "))
                    if quantidade_saida <= produto_selecionado['quantidade']:
                        produto_selecionado['quantidade'] -= quantidade_saida
                        grupo[produto_selecionado['categoria']] -= quantidade_saida
                        
                        print(f"\033[93m{quantidade_saida} unidades retiradas com sucesso do produto '{produto_selecionado['nome']}'\033[0m")
                    else:
                        print(f"\033[93mQuantidade insuficiente em estoque para '{produto_selecionado['nome']}'\033[0m")
                
                elif escolha == '0':
                    break

                else:
                    print(f"{red}Escolha inválida{vermelho}".center(50))

            elif menu == '3':                                                            
                print(separador)
                print(f'{yellow}Visualização dos produtos{amarelo}'.center(50))
                menu_3 = input("1. Total de produtos.\n2. Produtos por categoria.\n3. Produtos abaixo do mínimo.\nDigite a opção (ou sair): ")
                print(separador)
                while True:
                    if menu_3 == '1':
                        print(separador)
                        print(f"{yellow}O total de produtos é: {somatorio}{amarelo}".center(50))
                        if somatorio != 0:
                            for z, x in enumerate(lista_de_produtos, start= 1):
                                print(z, x)
                            print(separador)
                        break

                    elif menu_3 == '2':
                        if len(lista_de_produtos) == 0:
                            print("\033[93mO programa ainda não tem produtos em estoque.\033[0m")
                        else:
                            for categoria, quantidade_categoria in grupo.items():
                                porcentagem = (quantidade_categoria / somatorio) * 100
                                print(f"{yellow}A porcentagem de produtos na categoria '{categoria}' é: {porcentagem:.2f}%{amarelo}")
                        break

                    elif menu_3 == '3':
                        produtos_abaixo_do_minimo = []
                        for produto in lista_de_produtos:
                            if produto['quantidade'] < MINIMO:
                                produtos_abaixo_do_minimo.append(produto)

                        if produtos_abaixo_do_minimo:
                            print("\033[93mProdutos abaixo do estoque mínimo:\033[0m")
                            for produto in produtos_abaixo_do_minimo:
                                print(f"Nome: {produto['nome']}, Categoria: {produto['categoria']}, Quantidade: {produto['quantidade']}")
                        else:
                            print("\033[93mNão há necessidade de fazer um novo pedido.\033[0m")
                        break
                    
                    elif menu_3.lower() == 'sair':
                        break

            elif menu == '4':
                menu_4 = int(input('1. Apagar produto\n2. Editar produto(nome ou categoria)\nDigite a opção: '))
                while True:
                    if menu_4 == 1:
                        for z, x in enumerate(lista_de_produtos, start= 1):
                            print(z, x)                     
                        escolha_menu_4 = int(input("Digite a opção que deseja apagar completamente: "))
                        temp_1 = lista_de_produtos[escolha_menu_4 - 1]['categoria']
                        temp_2 = lista_de_produtos[escolha_menu_4 - 1]['quantidade']
                        grupo[temp_1] -= temp_2
                        if grupo[temp_1] == 0:
                            del(grupo[temp_1])
                        del(lista_de_produtos[escolha_menu_4 - 1])
                        print(separador)
                        print(f"{yellow}Apagado!{amarelo}".center(50))
                        print(separador)
                        break
                    if menu_4 == 2:
                        for i, produto in enumerate(lista_de_produtos, start=1):
                            print(f"{i}. Nome: {produto['nome']}, Categoria: {produto['categoria']}")
                        escolha_menu_4 = int(input("Escolha a opção que deseja editar: "))
                        temp_1 = lista_de_produtos[escolha_menu_4 - 1]['categoria']
                        temp_2 = lista_de_produtos[escolha_menu_4 - 1]['quantidade']
                        print(separador)
                        print(f"{yellow}Produto {lista_de_produtos[escolha_menu_4 - 1]['nome']}, da categoria {lista_de_produtos[escolha_menu_4 - 1]['categoria']} escolhido.{amarelo}".center(50))
                        esc_menu_4_2 = int(input("1.Editar nome\n2.Editar categoria\nDigite a opção: "))
                        if esc_menu_4_2 == 1:
                            print("Escolha 1")
                            novo_nome = input("Digite o novo nome do produto: ")
                            lista_de_produtos[escolha_menu_4 - 1]['nome'] = novo_nome
                            print("Novo nome registrado.")
                        
                        if esc_menu_4_2 == 2:
                            print("Escolha 2")
                            nova_categoria = str(input("Digite a nova categoria do produto: "))
                            lista_de_produtos[escolha_menu_4 - 1]['categoria'] = nova_categoria
                            if nova_categoria in grupo:
                                grupo[nova_categoria] += temp_2
                                grupo[temp_1] -= temp_2
                                if grupo[temp_1] == 0:
                                    del(grupo[temp_1])
                            else:
                                grupo[nova_categoria] = temp_2                         
                        else:
                            print("Escolha inválida")

                        break
                                                                   
                    else:
                        print(separador)
                        print(f"{yellow}Opção incorreta!{amarelo}".center(50))
                        break
            
            elif menu == '5':
                print(grupo)
                grupo = {}
                salvar_dados("grupo.pkl", grupo)
            
            elif menu.lower() == 'sair':
                print(separador)
                print(f"{yellow}Programa encerrado.{amarelo}".center(50))
                print(separador)
                break 
            
            else:
                print(separador)
                print(f"{yellow}Operação inválida. Escolha novamente.{amarelo}".center(50))
                print(separador)

            # Serializa em bytes as informações e atualiza a variável somatório, as listas e os dicionários.
            somatorio = sum(produto['quantidade'] for produto in lista_de_produtos)
            salvar_dados("lista_de_produtos.pkl", lista_de_produtos)
            salvar_dados("grupo.pkl", grupo)
            salvar_dados("produto.pkl", produto)
        
        
        if menu.lower() == 'sair':
            print(separador)
            print(f"{yellow}Programa encerrado.{amarelo}".center(50))
            print(separador)
            break

    else:
        print(separador)
        print(f"{red}Login ou senha incorretos. {3 - contador} tentativas restantes.{vermelho}".center(50))
        print(separador)
        if ((3 - contador) == 0):
          print(separador)
          print(f"{yellow}Programa encerrado{amarelo}")
          print(separador)
          break
